#!/usr/bin/perl -w

use strict;    
use DNS::ZoneParse;
use Data::Dumper;
use WebService::Amazon::Route53;
use File::Basename;
use Getopt::Std;


use constant AWS_ID => 'changeme';
use constant AWS_SECRET => 'changeme';
# set ALERT_EMAIL to FALSE to disable email alerts.
use constant ALERT_EMAIL => 'change@me.com';
use constant INFO_EMAIL => 'change@me.com';

my $myTime=time();
my $tmpXml="/tmp/.tmpZone_${myTime}.xml";
my $tmpHost="/tmp/.tmpZone_${myTime}.host";
my ($zones,$next_marker)='';
my $r53 = WebService::Amazon::Route53->new(id => AWS_ID, key => AWS_SECRET);
my $count = 0;
my %options=();
getopts("ah", \%options);
if (($options{h} || not defined $options{a}) && not defined $ARGV[0]) {
    die "Print out the NS servers for domains served by Route53.\nUsage:\n\t$0 <DOMAIN1> <DOMAIN2> <DOMAIN3> ... (List any number of domains)\n\t$0 -a (This will retrieve all zones on route53)\n";
}

if ($options{a}) {
    ($zones,$next_marker) = $r53->list_hosted_zones(max_items => 50);
} else {
    my @tmp_arr;
    foreach (@ARGV) {
      $tmp_arr[$count]{name}=$_;
      $count++;
    }
$zones = \@tmp_arr;
$count=0;
}

$count = doStuff($zones,$count);
while ($next_marker) {
    ($zones,$next_marker) = $r53->list_hosted_zones(marker => $next_marker,max_items => 50);
    $count = doStuff($zones,$count);
}

print "Done. $count zones found.\n";

# cleanup files
unlink($tmpXml);
unlink($tmpHost);


###############
###############
sub doStuff {
    my $zones = shift;
    my $count = shift;

foreach my $z (@$zones) {
    my $zname = $z->{name};
    my $origin = $zname . ".";
    my $r53_out = `/usr/local/bin/r53.py --zone ${zname} --pull > ${tmpXml}`;
    my $tobind_out = `/usr/local/bin/route53tobind.pl --origin=${origin} < ${tmpXml} > ${tmpHost}`;

    unless (-e $tmpXml || -z $tmpXml) {
       print "[ERROR] tmp XML File Doesn't Exist or is Empty!";
       exit 1;
    }

    unless (-e $tmpHost || -z $tmpHost) {
        print "[ERROR] tmp Hosts File Doesn't Exist or is Empty!";
        exit 1;
    }

    my $hashA = {};
    my $zonefile = DNS::ZoneParse->new($tmpHost,$origin);
    my $r = $zonefile->ns();

    print "${zname}\n";
    foreach my $record (@$r){
    print "\t". substr($record->{host}, 0, -1) ."\n";
    }
 $count++;
 }
return $count;
}

sub send_email {
           my $msg = shift;
        my $subject = shift;
           my $email_to = shift;
        if ($email_to) {
            my $from = 'route53@gorillanation.com';
            open(MAIL, "|/usr/sbin/sendmail -t");

            # Email Header
            print MAIL "To: " . $email_to . "\n";
            print MAIL "From: $from\n";
            print MAIL "Subject: $subject\n\n";
            # Email Body
            print MAIL $msg;
            close(MAIL);
        }
}
